class MyColorizer extends React.Component{

	constructor(props){

		super(props);
		
		this.state = {
			color: "",
			bgColor: "white"
		};
		
		//Использование стрелочной функции освобождает от bind(this);
		//this.colorValue = this.colorValue.bind(this);
		//this.setNewColor = this.setNewColor.bind(this);
		
	}

	//Стрелочная функция
	colorValue = (e) => {
		this.setState({color: e.target.value});
	};

	//Стрелочная функция
	setNewColor = (e) => {
		this.setState({bgColor: this.state.color});
		this._input.focus();
		this._input.value = "";
		e.preventDefault();
	};

	render(){

		var self = this;

		var squareStyle = {
			backgroundColor: this.state.bgColor
		};	
		return (
		<div className="colorArea">
			<div style={squareStyle} className="colorSquare">
			</div>
			<form onSubmit={this.setNewColor}>
				<input onChange={this.colorValue} placeholder="Значение цвета" ref={function(el){self._input = el;}}></input>
				<button>ok</button>
			</form>
			<MyColorLabel color={this.state.bgColor}/>
		</div>
		);
	}

}

var heading = document.getElementById("colorHeading");

class MyColorLabel extends React.Component{

	render(){
		return ReactDOM.createPortal(": "+this.props.color, heading);
	}

}


ReactDOM.render(
<div>
<MyColorizer/>
</div>
,document.getElementById("container"));
